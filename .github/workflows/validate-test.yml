name: Test project

permissions:
  contents: read

env:
  NODE_VERSION: 20

on:
  # allow as dispatch call
  workflow_dispatch:
    inputs:
      push_code_coverage:
        description: If code coverage is needed
        type: boolean
        required: true

  workflow_call:
    inputs:
      push_code_coverage:
        description: If code coverage is needed
        type: boolean

jobs:
  nextjs:
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: ${{ github.ref == 'refs/heads/main' && '0' || '1' }} # Fetch all history for all branches for sonarqube analysis

      - name: ‚éî Setup node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          registry-url: https://npm.pkg.github.com/

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
          key: modules-node-${{ hashFiles('package-lock.json') }}

      - name: üì• Download deps
        run: |
          npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ‚úÖ Validate test script
        run: npm run test:ci

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        if: github.ref == 'refs/heads/main'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: inputs.push_code_coverage == true

  rust:
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v5

      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"

      - name: ‚éî Setup node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - uses: browser-actions/setup-chrome@v2

      - name: ‚úÖ Validate Wasm binary is latest with BEST effort
        uses: nick-fields/retry@v3
        with:
          timeout_seconds: 60
          max_attempts: 3
          shell: bash
          retry_on: error
          command: |
            cd crate/snake && wasm-pack build --target web --out-dir pkg_compare
            cd -
            chmod a+x ./.github/scripts/wasm-check.sh && ./.github/scripts/wasm-check.sh pkg_compare

      - name: ‚úÖ Validate wasm test
        run: |
          chrome --version
          npm run rust:generate && npm run rust:test
        shell: bash

      - name: Add rust wasm bindgen for code coverage run
        run: |
          echo "commented, core Rust needs to improved"
          # cd crate/snake && cargo install wasm-bindgen-cli --vers "0.2.84"
        shell: bash

      - name: ‚úÖ Validate for code coverage, work stopped here apparrently there are no solutions yet
        run: |
          echo "commented, core Rust needs to improved"
          #cd crate && cargo test --target wasm32-unknown-unknown
        shell: bash
